---
# tasks file for nuxt-setup-project
- name: Directory docker check exists {{ docker_path }}.
  stat:
    path: "{{ docker_path }}"
  register: dir_docker_exists

- name: pull repo if exists {{ docker_app_name }}.
  git:
    repo: '{{ docker_repo }}'
    dest: "{{ docker_path }}"
    clone: no
    update: yes
    accept_hostkey: yes
    version: master
    force: yes
  become: no
  when: dir_docker_exists.stat.exists

- name: clone from git {{ docker_app_name }}.
  git:
    repo: '{{ docker_repo }}'
    dest: "{{ docker_path }}"
    clone: yes
    update: no
    accept_hostkey: yes
    version: master
  become: no
  when: dir_docker_exists.stat.exists == False

- name: Directory app check exists.
  stat:
    path: "{{ item.path }}"
  with_items: "{{ apps_path }}"
  register: dir_app_exists

- name: Pull repo if exists.
  git:
    repo: '{{ item.repo }}'
    dest: "{{ item.dest }}"
    clone: no
    update: yes
    accept_hostkey: yes
    version: master
    force: yes
  become: no
  loop: "{{ apps_repo }}"
  when: dir_app_exists.stat.exists

- name: Clone from git.
  git:
    repo: '{{ item.repo }}'
    dest: "{{ item.dest }}"
    clone: yes
    update: no
    accept_hostkey: yes
    version: master
  become: no
  loop: "{{ apps_repo }}"
  when: dir_app_exists.stat.exists == False

- name: Recreate package.json. 
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items: "{{ package_json }}"

- name: Create file env. 
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items: "{{ env_source }}"

- name: logs directory permissions.
  file: 
    path: "{{ docker_logs }}"
    mode: '0775'
    recurse: 'yes'

- name: Started  Docker compose {{ docker_app_name }}.
  docker_compose:
    project_src: "{{ docker_path }}"
    state: present
  register: "{{ docker_app_name }}"

# - name: Started service member-test.
#   command: docker-compose -f docker-compose.yml up -d member-test
#   args:
#     chdir: /home/docker-frontend-hotel
