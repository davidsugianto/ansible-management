# Global Agent Configuration
[agent]
  interval = "5s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "5s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  hostname = "HOTEL-DB"
  omit_hostname = false

# Input Plugins
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
[[inputs.diskio]]
[[inputs.io]]
[[inputs.mem]]
[[inputs.net]]
  interfaces = ["eth*", "enp0s[0-1]"]
[[inputs.system]]
[[inputs.systemd_units]]
[[inputs.swap]]
[[inputs.netstat]]
[[inputs.net_response]]
  protocol = "tcp"
  address = "localhost:80" # Server address (default localhost)
[[inputs.ethtool]]
  interface_include = ["eth0", "eth1"]
[[inputs.processes]]
[[inputs.kernel]]
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  container_names = []
  container_name_include = []
  container_name_exclude = []
  timeout = "5s"
  perdevice = true
  total = false
  docker_label_include = []
  docker_label_exclude = []
[[inputs.interrupts]]

# Input postgresql-master
[[inputs.postgresql]] 
  address = "host=172.28.0.2 dbname=hotmis_production user=ioniquabraitesu password=ZKT96A9TLZ6HnjmX58aGamrvywTKJX6g sslmode=disable" 
  databases = ["hotmis_production"]
[[inputs.postgresql_extensible]]                                                                                            
  address = "host=172.28.0.2 dbname=hotmis_production user=ioniquabraitesu password=ZKT96A9TLZ6HnjmX58aGamrvywTKJX6g sslmode=disable" 
  databases = ["hotmis_production"]                                                                                      
[[inputs.postgresql_extensible.query]]                                                                                      
  sqlquery="select count(1) as amount, state from pg_stat_activity where usename != 'ioniquabraitesu' group by state"              
  version=901                                                                                                               
  withdbname=false                                                                                                          
  tagvalue="state"                                                                                                          
  measurement="pg_connections"                                                                                              
[[inputs.postgresql_extensible.query]]                                                                                      
  sqlquery="SELECT schema_name, pg_size_pretty(sum(table_size)::bigint) as disk_space, ((sum(table_size)::bigint) / 1024) / 1024 as size_MB FROM (SELECT pg_catalog.pg_namespace.nspname as schema_name, pg_relation_size(pg_catalog.pg_class.oid) as table_size FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON relnamespace = pg_catalog.pg_namespace.oid) t WHERE t.schema_name not in ('information_schema','pg_catalog','pg_toast') GROUP BY schema_name ORDER BY schema_name"                    
  version=901                                                                                                               
  withdbname=false                                                                                                          
  tagvalue="schema_name"                                                                                                    
  measurement="pg_schemas_size"   
[[inputs.postgresql_extensible.query]]                                                                                      
  sqlquery="select pg_wal_lsn_diff(sent_lsn, write_lsn)::integer as write_lag, pg_wal_lsn_diff(sent_lsn	, flush_lsn)::integer as flush_lag, pg_wal_lsn_diff(sent_lsn, replay_lsn)::integer as replay_lag from pg_stat_replication" 
  version=901 
  withdbname=false 
  tagvalue="" 
  measurement="pg_stat_replication"
[[inputs.postgresql_extensible.query]]
  sqlquery = "SELECT * FROM pg_stat_database"
  version = 904
  tagvalue = ""
  measurement = "pg_stat_database"
  withdbname = false  
[[inputs.postgresql_extensible.query]]
  sqlquery = "SELECT * FROM pg_stat_replication"
  version = 904
  tagvalue = ""
  measurement = "pg_stat_replication"
  withdbname = false

# Input postgresql-slave                                                                                                                
[[inputs.postgresql_extensible]]                                                                                            
  address = "host=172.28.0.3 dbname=hotmis_production user=ioniquabraitesu password=ZKT96A9TLZ6HnjmX58aGamrvywTKJX6g sslmode=disable" 
  databases = ["hotmis_production"]
[[inputs.postgresql_extensible.query]] 
  sqlquery="select case when pg_is_in_recovery() is true then 1 else 0 end as is_in_recovery;" 
  version=901 
  withdbname=false 
  tagvalue="" 
  measurement="pg_is_in_recovery"
[[inputs.postgresql_extensible.query]]
  sqlquery = "SELECT * FROM pg_stat_database"
  version = 904
  tagvalue = ""
  measurement = "pg_stat_database"
  withdbname = false

[[inputs.postgresql_extensible.query]] 
  sqlquery="SELECT CASE WHEN pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() THEN 0 ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp()) END AS log_delay;"  
  version=901
  withdbname=false 
  tagvalue="" 
  measurement="pg_log_delay"

# Input Redis
# [[inputs.redis]]
#   servers = ["tcp://localhost:6379"] # redis container ip
#   password = "s#cr@t%"

# Input Elasticsearch
# [[outputs.elasticsearch]]
#   urls = [ "http://node1.es.example.com:9200" ]
#   timeout = "5s"
#   enable_sniffer = false
#   health_check_interval = "10s"
#   username = "elasticsearch"
#   password = "mypassword"
#   index_name = "elasticsearch-%Y.%m.%d"
#   manage_template = true
#   template_name = "elasticsearch"
#   overwrite_template = false

# Output Plugin InfluxDB
[[outputs.influxdb]]
  database = "picasso_metrics_db"
  urls = [ "http://influxdb:8086" ] # ip http://ip_address:8086
  username = "admin"
  password = "ZPgcUexDJRDUsGCxrAMgwditmnJvqO"
